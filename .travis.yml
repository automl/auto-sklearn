language: python

sudo: false

env:
  global:
  - OPENBLAS_NUM_THREADS=1
  - OMP_NUM_THREADS=1
  - MKL_NUM_THREADS=1

matrix:
  allow_failures:
  - os: osx
  
  include:
  - os: linux
    env: DISTRIB="conda" PYTHON_VERSION="3.5" COVERAGE="true" MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
  - os: linux
    env: DISTRIB="conda" PYTHON_VERSION="3.6" DOCPUSH="true" MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
  - os: linux
    env: DISTRIB="conda" PYTHON_VERSION="3.6" EXAMPLES="true" MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
  - os: linux
    env: DISTRIB="conda" PYTHON_VERSION="3.7" MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
  - os: linux
    env: DISTRIB="conda" PYTHON_VERSION="3.6" RUN_FLAKE8="true" SKIP_TESTS="true" MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"


  # Temporarily disabling OSX builds because thy take too long
  # Set language to generic to not break travis-ci
  # https://github.com/travis-ci/travis-ci/issues/2312#issuecomment-195620855
  # so far, this issue is still open and there is no good solution
  # python will then be installed by anaconda
  #- os: osx
  #  sudo: required
  #  language: generic
  #  env: DISTRIB="conda" PYTHON_VERSION="3.5" MINICONDA_URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"

cache:
  # We use three different cache directory
  # to work around a Travis bug with multi-platform cache
  directories:
  - $HOME/.cache/pip
  - $HOME/download
  pip: true

git:
  depth: 5

env:
  global:
  # Directory where tests are run from
  - TEST_DIR=/tmp/test_dir/
  - MODULE=autosklearn

before_install:
  - wget $MINICONDA_URL -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - if [[ `which conda` ]]; then echo 'Conda installation successful'; else exit 1; fi
  - conda create -n testenv --yes python=$PYTHON_VERSION pip wheel nose gxx_linux-64 gcc_linux-64 swig
  - source activate testenv

install:
  # Install general requirements the way setup.py suggests
  - pip install pep8 codecov
  # Temporarily pin the numpy version for travis-ci
  - pip install "numpy<=1.14.5"
  - cat requirements.txt | xargs -n 1 -L 1 pip install
  # Install openml dependency for metadata generation unittest
  - pip install xmltodict requests liac-arff
  - pip install git+https://github.com/openml/openml-python@0b9009b0436fda77d9f7c701bd116aff4158d5e1 --no-deps
  - mkdir ~/.openml
  - echo "apikey = 610344db6388d9ba34f6db45a3cf71de" > ~/.openml/config
  - pip install flake8
  # Debug output to know all exact package versions!
  - pip freeze
  - python setup.py install

script: bash ci_scripts/test.sh
after_success: source ci_scripts/success.sh && source ci_scripts/create_doc.sh $TRAVIS_BRANCH "doc_result"

deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN # set in the settings page of my repository
  keep-hisotry: true
  commiter-from-gh: true
  on:
    all_branches: true
    condition: $doc_result = "success"
  local_dir: doc/$TRAVIS_BRANCH
