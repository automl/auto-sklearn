name: Generate Baselines

on:
  workflow_dispatch

  #push:
  #  branches:
  #    - master

env:
  AUTOMLBENCHMARK_REPO: 'openml/automlbenchmark'
  AUTOMLBENCHMARK_REF: 'master'
  GITHUB_URL: 'https://github.com'
  GITHUB_RAW_URL: 'https://raw.githubusercontent.com'
  WORKFLOW_DIR: '.github/workflows/generate-baselines'
  PYTHON_UTIL_FILE: 'baseline-util.py'

jobs:

  generate-baselines:
    name: Generate Baselines
    runs-on: ubuntu-latest

    strategy:
      matrix:
        task_type: [regression, classification]

    steps:
      - name: Debug
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
          pwd
          ls -a

      - name: Branch extract
        id: extract
        run: echo "##[set-output name=branch;]${GITHUB_REF##*/}"
        # outputs
        #   branch: the branch name

      - name: Setup Python 3.9.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Checkout Automlbenchmark
        uses: actions/checkout@v2
        with:
          repository: ${{ env.AUTOMLBENCHMARK_REPO }}
          ref: ${{ env.AUTOMLBENCHMARK_REF }}

      - name: Install Automlbenchmark
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Fetch configs
        id: fetch
        env:
          filesource: ${{ env.GITHUB_RAW_URL }}/${{ github.repository }}/${{ steps.extract.outputs.branch }}/${{ env.WORKFLOW_DIR }}
          benchmark_dir: 'baseline_benchmark'
          config_file: 'config.yaml'
          constraints_file: 'constraints.yaml'
          benchmark_file: ${{ matrix.task_type }}_benchmark.yaml
        run: |
          mkdir $benchmark_dir
          mkdir $benchmark_dir/benchmark
          wget ${filesource}/${config_file} -O ${benchmark_dir}/${config_file}
          wget ${filesource}/${constraints_file} -O ${benchmark_dir}/${constraints_file}
          wget ${filesource}/benchmark/${benchmark_file} -O ${benchmark_dir}/benchmark/${benchmark_file}
          echo "::set-output name=benchmarkdir::$(pwd)/${benchmark_dir}"
          # outputs
          #   benchmarkdir: the dir with config in it

      - name: Run the automl benchmark
        id: bench
        env:
          benchmarkdir: ${{ steps.gen_framework.outputs.benchmarkdir }}
          framework: autosklearn:stable
          benchmark: ${{ matrix.task_type }}
          constraint: 10min10fold
          benchmark_output: results/results.csv'
          results_to: baseline_${{ matrix.task_type }}_${{ github.repository_owner }}_${{ steps.extract.outputs.branch }}_${{ github.sha }}.csv
        run: |
          python runbenchmark.py -u $benchmarkdir $framework $benchmark $constraint
          mv $benchmark_output $results_to
          echo "::set-output name=results_path::$(pwd)/${results_to}"
          # outputs:
          #   results_path: path to the benchmark results

      - name: Upload Results as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: baselines
          path: |
            ${{ steps.bench.outputs.results_path }}
          retention-days: 90
