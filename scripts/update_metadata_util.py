import numpy as np
import openml


classification_tasks = [
    233, 236, 242, 244, 246, 75090, 248, 251, 75124, 253, 254, 75092, 258,
    75093, 260, 261, 262, 75095, 266, 3043, 75097, 75098, 75099, 75159,
    75100, 275, 288, 75103, 75105, 75106, 75107, 75108, 75109, 75110,
    75112, 75113, 75114, 75115, 75116, 75117, 75119, 75120, 75121, 75123,
    252, 75125, 75126, 75127, 75129, 2117, 2119, 2120, 2122, 2123,
    75096, 75132, 75133, 75139, 75141, 75142, 75143, 75146, 75148, 75150,
    75153, 75154, 75230, 75156, 75157, 273, 2350, 75197, 75163, 75166,
    75169, 75171, 75172, 75173, 75174, 75175, 75176, 75177, 75179, 75240,
    75184, 75185, 75189, 75191, 75192, 75193, 75195, 75196, 75234, 75161,
    75198, 75168, 75201, 75202, 75203, 75188, 75205, 75207, 75210, 75212,
    75213, 75215, 75217, 75219, 75221, 75222, 75223, 75134, 75225, 75226,
    75227, 75231, 75232, 75233, 75101, 75235, 75236, 75237, 75178, 75239,
    75181, 75187, 75250, 75249, 75248, 75243, 75244, 75182]
regression_tasks = [
    359997, 359998, 359999, 360000, 360001, 360002, 360003, 167146, 360004, 360005, 360006,
    360007, 211696, 360009, 360010, 360011, 360012, 360013, 360014, 360015, 360016, 360017,
    360018, 360019, 360020, 360021, 360022, 360023, 360024, 360025, 360026, 360027, 360028,
    360029, 360030, 360031, 360032, 360033, 360034, 360035, 360036, 360037, 360038, 360039,
    360040, 360041, 360042, 360043, 360044, 360045, 360046, 360047, 360048, 360049, 360050,
    360051, 360052, 360053, 360054, 360055, 360056, 360057, 360058, 360059, 360060, 360061,
    360062, 360063, 360064, 360065, 360066, 360067, 360068, 360069, 360070, 360071, 360072,
    360073, 360074, 360075, 360076, 360077, 360078, 360079, 360080, 360081, 360082, 360083,
    360084, 360085, 360086, 360087, 360088, 360089, 360090, 360091, 360092, 360093, 360094,
    360095, 360096, 360097, 360098, 360099, 360100, 360101, 360102, 360103, 360104, 360105,
    360106, 360107, 360108,
]


def load_task(task_id):
    task = openml.tasks.get_task(task_id)
    X, y = task.get_X_and_y()
    train_indices, test_indices = task.get_train_test_split_indices()
    X_train = X[train_indices]
    y_train = y[train_indices]
    X_test = X[test_indices]
    y_test = y[test_indices]
    dataset = openml.datasets.get_dataset(task.dataset_id)
    _, _, cat, _ = dataset.get_data(target=task.target_name)
    name = dataset.name.lower()
    del _
    del dataset
    cat = ['categorical' if c else 'numerical' for c in cat]

    if isinstance(task, openml.tasks.OpenMLClassificationTask):
        task_type = 'classification'
    elif isinstance(task, openml.tasks.OpenMLRegressionTask):
        task_type = 'regression'
    else:
        raise ValueError('Unknown task type')

    return X_train, y_train, X_test, y_test, cat, task_type, name
